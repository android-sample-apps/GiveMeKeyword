// Generated by Dagger (https://dagger.dev).
package com.mut_jaeryo.data.source.drawing.remote;

import com.mut_jaeryo.data.api.drawing.DrawingService;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteDrawingDataSourceImpl_Factory implements Factory<RemoteDrawingDataSourceImpl> {
  private final Provider<DrawingService> drawingServiceProvider;

  public RemoteDrawingDataSourceImpl_Factory(Provider<DrawingService> drawingServiceProvider) {
    this.drawingServiceProvider = drawingServiceProvider;
  }

  @Override
  public RemoteDrawingDataSourceImpl get() {
    return newInstance(drawingServiceProvider.get());
  }

  public static RemoteDrawingDataSourceImpl_Factory create(
      Provider<DrawingService> drawingServiceProvider) {
    return new RemoteDrawingDataSourceImpl_Factory(drawingServiceProvider);
  }

  public static RemoteDrawingDataSourceImpl newInstance(DrawingService drawingService) {
    return new RemoteDrawingDataSourceImpl(drawingService);
  }
}
